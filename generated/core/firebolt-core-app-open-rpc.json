{
	"openrpc": "1.2.4",
	"info": {
		"title": "Firebolt Core SDK",
		"version": "1.5.0-integration"
	},
	"methods": [
		{
			"name": "Accessibility.closedCaptionsSettingsChanged",
			"summary": "Get the user's preferred closed-captions settings",
			"params": [
				{
					"name": "closedCaptionsSettings",
					"summary": "the closed captions settings",
					"schema": {
						"$ref": "https://meta.rdkcentral.com/firebolt/schemas/accessibility#/definitions/ClosedCaptionsSettings"
					}
				}
			],
			"tags": [
				{
					"name": "notifier",
					"x-notifier-for": "Accessibility.closedCaptionsSettings",
					"x-event": "Accessibility.onClosedCaptionsSettingsChanged"
				},
				{
					"name": "capabilities",
					"x-uses": [
						"xrn:firebolt:capability:accessibility:closedcaptions"
					]
				}
			],
			"examples": [
				{
					"name": "Getting the closed captions settings",
					"params": [
						{
							"name": "settings",
							"value": {
								"enabled": true,
								"styles": {
									"fontFamily": "monospaced_sanserif",
									"fontSize": 1,
									"fontColor": "#ffffff",
									"fontEdge": "none",
									"fontEdgeColor": "#7F7F7F",
									"fontOpacity": 100,
									"backgroundColor": "#000000",
									"backgroundOpacity": 100,
									"textAlign": "center",
									"textAlignVertical": "middle",
									"windowColor": "white",
									"windowOpacity": 50
								},
								"preferredLanguages": [
									"eng",
									"spa"
								]
							}
						}
					]
				}
			]
		},
		{
			"name": "Accessibility.highContrastUIChanged",
			"summary": "The user's preference for a high-contrast UI",
			"params": [
				{
					"name": "highContrastUI",
					"summary": "Whether high-contrast UI mode is enabled",
					"schema": {
						"type": "boolean"
					}
				}
			],
			"tags": [
				{
					"name": "notifier",
					"x-notifier-for": "Accessibility.highContrastUI",
					"x-event": "Accessibility.onHighContrastUIChanged"
				},
				{
					"name": "capabilities",
					"x-uses": [
						"xrn:firebolt:capability:accessibility:highcontrastui"
					]
				}
			],
			"examples": [
				{
					"name": "High-contrast UI mode is enabled",
					"params": [
						{
							"name": "Default Result",
							"value": true
						}
					]
				}
			]
		},
		{
			"name": "Accessibility.voiceGuidanceSettingsChanged",
			"summary": "Get the user's preferred voice guidance settings",
			"params": [
				{
					"name": "settings",
					"summary": "the voice guidance settings",
					"schema": {
						"$ref": "https://meta.rdkcentral.com/firebolt/schemas/accessibility#/definitions/VoiceGuidanceSettings"
					}
				}
			],
			"tags": [
				{
					"name": "notifier",
					"x-notifier-for": "Accessibility.voiceGuidanceSettings",
					"x-event": "Accessibility.onVoiceGuidanceSettingsChanged"
				},
				{
					"name": "capabilities",
					"x-uses": [
						"xrn:firebolt:capability:accessibility:voiceguidance"
					]
				}
			],
			"examples": [
				{
					"name": "Getting the voice guidance settings",
					"params": [
						{
							"name": "Default Result",
							"value": {
								"enabled": true,
								"navigationHints": true,
								"rate": 1
							}
						}
					]
				}
			]
		},
		{
			"name": "Accessibility.audioDescriptionSettingsChanged",
			"summary": "Get the user's preferred audio description settings",
			"params": [
				{
					"name": "settings",
					"summary": "the audio description settings",
					"schema": {
						"$ref": "#/components/schemas/Accessibility.AudioDescriptionSettings"
					}
				}
			],
			"tags": [
				{
					"name": "notifier",
					"x-notifier-for": "Accessibility.audioDescriptionSettings",
					"x-event": "Accessibility.onAudioDescriptionSettingsChanged"
				},
				{
					"name": "capabilities",
					"x-uses": [
						"xrn:firebolt:capability:accessibility:audiodescriptions"
					]
				}
			],
			"examples": [
				{
					"name": "Getting the audio description settings",
					"params": [
						{
							"name": "Default Result",
							"value": {
								"enabled": true
							}
						}
					]
				}
			]
		},
		{
			"name": "Advertising.policyChanged",
			"summary": "Get the advertising privacy and playback policy",
			"params": [
				{
					"name": "adPolicy",
					"summary": "the ad policy",
					"schema": {
						"$ref": "#/components/schemas/Advertising.AdPolicy"
					}
				}
			],
			"tags": [
				{
					"name": "notifier",
					"x-notifier-for": "Advertising.policy",
					"x-event": "Advertising.onPolicyChanged"
				},
				{
					"name": "capabilities",
					"x-uses": [
						"xrn:firebolt:capability:privacy:advertising",
						"xrn:firebolt:capability:advertising:configuration"
					]
				}
			],
			"examples": [
				{
					"name": "Getting the advertising policy settings",
					"params": [
						{
							"name": "Default Result",
							"value": {
								"skipRestriction": "adsUnwatched",
								"limitAdTracking": false
							}
						}
					]
				}
			]
		},
		{
			"name": "Capabilities.available",
			"tags": [
				{
					"name": "notifier",
					"x-event": "Capabilities.onAvailable"
				},
				{
					"name": "capabilities",
					"x-uses": [
						"xrn:firebolt:capability:capabilities:info"
					]
				}
			],
			"summary": "Listens for all App permitted capabilities to become available.",
			"params": [
				{
					"name": "capability",
					"required": true,
					"schema": {
						"$ref": "https://meta.rdkcentral.com/firebolt/schemas/capabilities#/definitions/Capability"
					}
				},
				{
					"name": "value",
					"summary": "Provides the capability info.",
					"schema": {
						"$ref": "https://meta.rdkcentral.com/firebolt/schemas/capabilities#/definitions/CapabilityInfo"
					}
				}
			],
			"examples": [
				{
					"name": "Platform token is available",
					"params": [
						{
							"name": "capability",
							"value": "xrn:firebolt:capability:token:platform"
						},
						{
							"name": "value",
							"value": {
								"capability": "xrn:firebolt:capability:token:platform",
								"supported": true,
								"available": true,
								"use": {
									"permitted": true,
									"granted": true
								},
								"manage": {
									"permitted": true,
									"granted": true
								},
								"provide": {
									"permitted": true,
									"granted": true
								},
								"details": [
									"unpermitted"
								]
							}
						}
					]
				}
			]
		},
		{
			"name": "Capabilities.unavailable",
			"tags": [
				{
					"name": "notifier",
					"x-event": "Capabilities.onUnavailable"
				},
				{
					"name": "capabilities",
					"x-uses": [
						"xrn:firebolt:capability:capabilities:info"
					]
				}
			],
			"summary": "Listens for all App permitted capabilities to become unavailable.",
			"params": [
				{
					"name": "capability",
					"required": true,
					"schema": {
						"$ref": "https://meta.rdkcentral.com/firebolt/schemas/capabilities#/definitions/Capability"
					}
				},
				{
					"name": "value",
					"summary": "Provides the capability info.",
					"schema": {
						"$ref": "https://meta.rdkcentral.com/firebolt/schemas/capabilities#/definitions/CapabilityInfo"
					}
				}
			],
			"examples": [
				{
					"name": "Platform token is unavailable.",
					"params": [
						{
							"name": "capability",
							"value": "xrn:firebolt:capability:token:platform"
						},
						{
							"name": "value",
							"value": {
								"capability": "xrn:firebolt:capability:token:platform",
								"supported": true,
								"available": false,
								"use": {
									"permitted": true,
									"granted": true
								},
								"manage": {
									"permitted": true,
									"granted": true
								},
								"provide": {
									"permitted": true,
									"granted": true
								},
								"details": [
									"unavailable"
								]
							}
						}
					]
				}
			]
		},
		{
			"name": "Capabilities.granted",
			"tags": [
				{
					"name": "notifier",
					"x-event": "Capabilities.onGranted"
				},
				{
					"name": "capabilities",
					"x-uses": [
						"xrn:firebolt:capability:capabilities:info"
					]
				}
			],
			"summary": "Listens for all App permitted capabilities to become granted.",
			"params": [
				{
					"name": "role",
					"required": true,
					"schema": {
						"$ref": "https://meta.rdkcentral.com/firebolt/schemas/capabilities#/definitions/Role"
					}
				},
				{
					"name": "capability",
					"required": true,
					"schema": {
						"$ref": "https://meta.rdkcentral.com/firebolt/schemas/capabilities#/definitions/Capability"
					}
				},
				{
					"name": "value",
					"summary": "Provides the capability info.",
					"schema": {
						"$ref": "https://meta.rdkcentral.com/firebolt/schemas/capabilities#/definitions/CapabilityInfo"
					}
				}
			],
			"examples": [
				{
					"name": "Postal code granted",
					"params": [
						{
							"name": "role",
							"value": "use"
						},
						{
							"name": "capability",
							"value": "xrn:firebolt:capability:localization:postal-code"
						},
						{
							"name": "value",
							"value": {
								"capability": "xrn:firebolt:capability:localization:postal-code",
								"supported": true,
								"available": true,
								"use": {
									"permitted": true,
									"granted": true
								},
								"manage": {
									"permitted": true,
									"granted": true
								},
								"provide": {
									"permitted": true,
									"granted": true
								}
							}
						}
					]
				}
			]
		},
		{
			"name": "Capabilities.revoked",
			"tags": [
				{
					"name": "notifier",
					"x-event": "Capabilities.onRevoked"
				},
				{
					"name": "capabilities",
					"x-uses": [
						"xrn:firebolt:capability:capabilities:info"
					]
				}
			],
			"summary": "Listens for all App permitted capabilities to become revoked.",
			"params": [
				{
					"name": "role",
					"required": true,
					"schema": {
						"$ref": "https://meta.rdkcentral.com/firebolt/schemas/capabilities#/definitions/Role"
					}
				},
				{
					"name": "capability",
					"required": true,
					"schema": {
						"$ref": "https://meta.rdkcentral.com/firebolt/schemas/capabilities#/definitions/Capability"
					}
				},
				{
					"name": "value",
					"summary": "Provides the capability info.",
					"schema": {
						"$ref": "https://meta.rdkcentral.com/firebolt/schemas/capabilities#/definitions/CapabilityInfo"
					}
				}
			],
			"examples": [
				{
					"name": "Postal code revoked",
					"params": [
						{
							"name": "role",
							"value": "use"
						},
						{
							"name": "capability",
							"value": "xrn:firebolt:capability:localization:postal-code"
						},
						{
							"name": "value",
							"value": {
								"capability": "xrn:firebolt:capability:localization:postal-code",
								"supported": true,
								"available": true,
								"use": {
									"permitted": true,
									"granted": true
								},
								"manage": {
									"permitted": true,
									"granted": true
								},
								"provide": {
									"permitted": true,
									"granted": true
								},
								"details": [
									"grantDenied"
								]
							}
						}
					]
				}
			]
		},
		{
			"name": "Device.deviceNameChanged",
			"tags": [
				{
					"name": "notifier",
					"x-event": "Device.onDeviceNameChanged"
				},
				{
					"name": "deprecated",
					"x-since": "0.6.0",
					"x-alternative": "Device.name()"
				},
				{
					"name": "capabilities",
					"x-uses": [
						"xrn:firebolt:capability:device:name"
					]
				}
			],
			"summary": "Get the human readable name of the device",
			"params": [
				{
					"name": "value",
					"summary": "the device friendly-name",
					"schema": {
						"type": "string"
					}
				}
			],
			"examples": [
				{
					"name": "Getting the device name",
					"params": [
						{
							"name": "Default Result",
							"value": "Living Room"
						}
					]
				}
			]
		},
		{
			"name": "Device.nameChanged",
			"summary": "The human readable name of the device",
			"params": [
				{
					"name": "value",
					"summary": "the device friendly-name",
					"schema": {
						"type": "string"
					}
				}
			],
			"tags": [
				{
					"name": "notifier",
					"x-notifier-for": "Device.name",
					"x-event": "Device.onNameChanged"
				},
				{
					"name": "capabilities",
					"x-uses": [
						"xrn:firebolt:capability:device:name"
					]
				}
			],
			"examples": [
				{
					"name": "Default example #1",
					"params": [
						{
							"name": "Default Result",
							"value": "Living Room"
						}
					]
				},
				{
					"name": "Default example #2",
					"params": [
						{
							"name": "Default Result",
							"value": "Kitchen"
						}
					]
				}
			]
		},
		{
			"name": "Device.hdcpChanged",
			"summary": "Get the negotiated HDCP profiles for a connected device. \n\n For devices that do not require additional connections (e.g. panels), `true` will be returned for all profiles.",
			"params": [
				{
					"name": "negotiatedHdcpVersions",
					"summary": "the negotiated HDCP versions",
					"schema": {
						"$ref": "#/components/schemas/Device.HDCPVersionMap"
					}
				}
			],
			"tags": [
				{
					"name": "notifier",
					"x-notifier-for": "Device.hdcp",
					"x-event": "Device.onHdcpChanged"
				},
				{
					"name": "capabilities",
					"x-uses": [
						"xrn:firebolt:capability:device:info"
					]
				}
			],
			"examples": [
				{
					"name": "Getting the negotiated HDCP versions",
					"params": [
						{
							"name": "Default Result",
							"value": {
								"hdcp1.4": true,
								"hdcp2.2": true
							}
						}
					]
				}
			]
		},
		{
			"name": "Device.hdrChanged",
			"summary": "Get the negotiated HDR formats for the connected display and device",
			"params": [
				{
					"name": "negotiatedHdrFormats",
					"summary": "the negotiated HDR formats",
					"schema": {
						"$ref": "#/components/schemas/Device.HDRFormatMap"
					}
				}
			],
			"tags": [
				{
					"name": "notifier",
					"x-notifier-for": "Device.hdr",
					"x-event": "Device.onHdrChanged"
				},
				{
					"name": "capabilities",
					"x-uses": [
						"xrn:firebolt:capability:device:info"
					]
				}
			],
			"examples": [
				{
					"name": "Getting the negotiated HDR formats",
					"params": [
						{
							"name": "Default Result",
							"value": {
								"hdr10": true,
								"hdr10Plus": true,
								"dolbyVision": true,
								"hlg": true
							}
						}
					]
				}
			]
		},
		{
			"name": "Device.audioChanged",
			"summary": "Get the supported audio profiles for the connected devices. \n\n It is not recommended to use this API for visual badging on content within your app since this does not reflect the settings of the user.",
			"params": [
				{
					"name": "supportedAudioProfiles",
					"summary": "the supported audio profiles",
					"schema": {
						"$ref": "#/components/schemas/Device.AudioProfiles"
					}
				}
			],
			"tags": [
				{
					"name": "notifier",
					"x-notifier-for": "Device.audio",
					"x-event": "Device.onAudioChanged"
				},
				{
					"name": "capabilities",
					"x-uses": [
						"xrn:firebolt:capability:device:info"
					]
				}
			],
			"examples": [
				{
					"name": "Getting the supported audio profiles",
					"params": [
						{
							"name": "Default Result",
							"value": {
								"stereo": true,
								"dolbyDigital5.1": true,
								"dolbyDigital5.1+": true,
								"dolbyAtmos": true
							}
						}
					]
				}
			]
		},
		{
			"name": "Device.screenResolutionChanged",
			"summary": "Get the resolution for the graphical surface of the app. \n\nThe pairs returned will be of a [width, height] format and will correspond to the following values: \n\nNTSC Standard Definition (SD): [720, 480] \n\nPAL Standard Definition (SD): [720, 576] \n\nHigh Definition (HD): [1280, 720] \n\nFull HD (FHD): [1920, 1080]\n\n4K Ultra High Definition (UHD): [3840, 2160] \n\n**Deprecated:** Use non-Firebolt APIs specific to your platform, e.g. W3C APIs",
			"params": [
				{
					"name": "screenResolution",
					"summary": "the resolution",
					"schema": {
						"$ref": "#/components/schemas/Device.Resolution"
					}
				}
			],
			"tags": [
				{
					"name": "notifier",
					"x-notifier-for": "Device.screenResolution",
					"x-event": "Device.onScreenResolutionChanged"
				},
				{
					"name": "capabilities",
					"x-uses": [
						"xrn:firebolt:capability:device:info"
					]
				},
				{
					"name": "deprecated",
					"x-alternative": "Use non-Firebolt APIs specific to your platform, e.g. W3C APIs",
					"x-since": "1.4.0"
				}
			],
			"examples": [
				{
					"name": "Getting the screen resolution",
					"params": [
						{
							"name": "Default Result",
							"value": [
								1920,
								1080
							]
						}
					]
				}
			]
		},
		{
			"name": "Device.videoResolutionChanged",
			"summary": "Get the maximum supported video resolution of the currently connected device and display. \n\nThe pairs returned will be of a [width, height] format and will correspond to the following values: \n\nNTSC Standard Definition (SD): [720, 480] \n\nPAL Standard Definition (SD): [720, 576] \n\nHigh Definition (HD): [1280, 720] \n\nFull HD (FHD): [1920, 1080]\n\n4K Ultra High Definition (UHD): [3840, 2160]",
			"params": [
				{
					"name": "videoResolution",
					"summary": "the resolution",
					"schema": {
						"$ref": "#/components/schemas/Device.Resolution"
					}
				}
			],
			"tags": [
				{
					"name": "notifier",
					"x-notifier-for": "Device.videoResolution",
					"x-event": "Device.onVideoResolutionChanged"
				},
				{
					"name": "capabilities",
					"x-uses": [
						"xrn:firebolt:capability:device:info"
					]
				}
			],
			"examples": [
				{
					"name": "Getting the video resolution",
					"params": [
						{
							"name": "Default Result",
							"value": [
								1920,
								1080
							]
						}
					]
				}
			]
		},
		{
			"name": "Device.networkChanged",
			"summary": "Get the current network status and type",
			"params": [
				{
					"name": "networkInfo",
					"summary": "the status and type",
					"schema": {
						"$ref": "#/components/schemas/Device.NetworkInfoResult"
					}
				}
			],
			"tags": [
				{
					"name": "notifier",
					"x-notifier-for": "Device.network",
					"x-event": "Device.onNetworkChanged"
				},
				{
					"name": "capabilities",
					"x-uses": [
						"xrn:firebolt:capability:network:status"
					]
				}
			],
			"examples": [
				{
					"name": "Getting the network info",
					"params": [
						{
							"name": "Default Result",
							"value": {
								"state": "connected",
								"type": "wifi"
							}
						}
					]
				}
			]
		},
		{
			"name": "Discovery.navigateTo",
			"tags": [
				{
					"name": "notifier",
					"x-event": "Discovery.onNavigateTo"
				},
				{
					"name": "capabilities",
					"x-uses": [
						"xrn:firebolt:capability:discovery:navigate-to"
					]
				}
			],
			"summary": "listen to `navigateTo` events",
			"params": [
				{
					"name": "value",
					"summary": "An object describing where in the app the user intends to navigate to",
					"schema": {
						"$ref": "https://meta.rdkcentral.com/firebolt/schemas/intents#/definitions/NavigationIntent"
					}
				}
			],
			"examples": [
				{
					"name": "Listening for `navigateTo` events",
					"params": [
						{
							"name": "event",
							"value": {
								"action": "search",
								"data": {
									"query": "a cool show"
								},
								"context": {
									"campaign": "unknown",
									"source": "voice"
								}
							}
						}
					]
				}
			]
		},
		{
			"name": "Discovery.userInterest",
			"summary": "Send an entity that the user has expressed interest in to the platform.",
			"tags": [
				{
					"name": "capabilities",
					"x-provides": "xrn:firebolt:capability:discovery:interest"
				}
			],
			"params": [
				{
					"name": "type",
					"required": true,
					"schema": {
						"$ref": "https://meta.rdkcentral.com/firebolt/schemas/discovery#/definitions/InterestType"
					}
				},
				{
					"name": "reason",
					"required": true,
					"schema": {
						"$ref": "https://meta.rdkcentral.com/firebolt/schemas/discovery#/definitions/InterestReason"
					}
				},
				{
					"name": "entity",
					"required": true,
					"schema": {
						"$ref": "https://meta.rdkcentral.com/firebolt/schemas/entity#/definitions/EntityDetails"
					}
				}
			],
			"result": {
				"name": "result",
				"schema": {
					"type": "null"
				}
			},
			"examples": [
				{
					"name": "Default Example",
					"params": [
						{
							"name": "type",
							"value": "interest"
						},
						{
							"name": "reason",
							"value": "playlist"
						},
						{
							"name": "entity",
							"value": {
								"identifiers": {
									"entityId": "345",
									"entityType": "program",
									"programType": "movie"
								},
								"info": {}
							}
						}
					],
					"result": {
						"name": "result",
						"value": null
					}
				}
			]
		},
		{
			"name": "Discovery.userInterest",
			"tags": [
				{
					"name": "capabilities",
					"x-provides": "xrn:firebolt:capability:discovery:interest",
					"x-push": true
				}
			],
			"summary": "Provide information about the entity currently displayed or selected on the screen.",
			"description": "Provide information about the entity currently displayed or selected on the screen.",
			"params": [
				{
					"name": "type",
					"required": true,
					"schema": {
						"$ref": "https://meta.rdkcentral.com/firebolt/schemas/discovery#/definitions/InterestType"
					}
				},
				{
					"name": "reason",
					"required": true,
					"schema": {
						"$ref": "https://meta.rdkcentral.com/firebolt/schemas/discovery#/definitions/InterestReason"
					}
				},
				{
					"name": "entity",
					"schema": {
						"$ref": "https://meta.rdkcentral.com/firebolt/schemas/entity#/definitions/EntityDetails"
					}
				}
			],
			"result": {
				"name": "result",
				"schema": {
					"type": "null"
				}
			},
			"examples": [
				{
					"name": "Default Example",
					"params": [
						{
							"name": "type",
							"value": "interest"
						},
						{
							"name": "reason",
							"value": "playlist"
						},
						{
							"name": "entity",
							"value": {
								"identifiers": {
									"entityId": "345",
									"entityType": "program",
									"programType": "movie"
								},
								"info": {
									"title": "Cool Runnings",
									"synopsis": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Pulvinar sapien et ligula ullamcorper malesuada proin libero nunc.",
									"releaseDate": "1993-01-01T00:00:00.000Z",
									"contentRatings": [
										{
											"scheme": "US-Movie",
											"rating": "PG"
										},
										{
											"scheme": "CA-Movie",
											"rating": "G"
										}
									]
								}
							}
						}
					],
					"result": {
						"name": "result",
						"value": null
					}
				}
			]
		},
		{
			"name": "Discovery.policyChanged",
			"summary": "get the discovery policy",
			"params": [
				{
					"name": "policy",
					"summary": "discovery policy opt-in/outs",
					"schema": {
						"$ref": "#/components/schemas/Discovery.DiscoveryPolicy"
					}
				}
			],
			"tags": [
				{
					"name": "notifier",
					"x-notifier-for": "Discovery.policy",
					"x-event": "Discovery.onPolicyChanged"
				},
				{
					"name": "capabilities",
					"x-uses": [
						"xrn:firebolt:capability:discovery:policy"
					]
				}
			],
			"examples": [
				{
					"name": "Getting the discovery policy",
					"params": [
						{
							"name": "Default Result",
							"value": {
								"enableRecommendations": true,
								"shareWatchHistory": true,
								"rememberWatchedPrograms": true
							}
						}
					]
				}
			]
		},
		{
			"name": "Discovery.pullEntityInfo",
			"tags": [
				{
					"name": "polymorphic-pull-event"
				},
				{
					"name": "notifier",
					"x-event": "Discovery.onPullEntityInfo",
					"x-pulls-for": "Discovery.entityInfo"
				},
				{
					"name": "capabilities",
					"x-provides": "xrn:firebolt:capability:discovery:entity-info"
				},
				{
					"name": "deprecated"
				}
			],
			"summary": "Provide information about a program entity and its available watchable assets, such as entitlement status and price, via either a push or pull call flow.",
			"description": "Provide information about a program entity and its available watchable assets, such as entitlement status and price, via either a push or pull call flow. Includes information about the program entity and its relevant associated entities, such as extras, previews, and, in the case of TV series, seasons and episodes.\n\nSee the `EntityInfo` and `WayToWatch` data structures below for more information.\n\nThe app only needs to implement Pull support for `entityInfo` at this time.",
			"params": [
				{
					"name": "request",
					"summary": "A Discovery.EntityInfoFederatedRequest object.",
					"schema": {
						"$ref": "#/components/schemas/Discovery.EntityInfoFederatedRequest"
					}
				}
			],
			"examples": [
				{
					"name": "Send entity info for a movie to the platform.",
					"params": [
						{
							"name": "request",
							"value": {
								"correlationId": "xyz",
								"parameters": {
									"entityId": "345"
								}
							}
						}
					]
				},
				{
					"name": "Send entity info for a movie with a trailer to the platform.",
					"params": [
						{
							"name": "request",
							"value": {
								"correlationId": "xyz",
								"parameters": {
									"entityId": "345"
								}
							}
						}
					]
				},
				{
					"name": "Send entity info for a TV Series with seasons and episodes to the platform.",
					"params": [
						{
							"name": "request",
							"value": {
								"correlationId": "xyz",
								"parameters": {
									"entityId": "345"
								}
							}
						}
					]
				}
			]
		},
		{
			"name": "Discovery.pullPurchasedContent",
			"tags": [
				{
					"name": "polymorphic-pull-event"
				},
				{
					"name": "notifier",
					"x-event": "Discovery.onPullPurchasedContent",
					"x-pulls-for": "Discovery.purchasedContent"
				},
				{
					"name": "capabilities",
					"x-provides": "xrn:firebolt:capability:discovery:purchased-content"
				},
				{
					"name": "deprecated"
				}
			],
			"summary": "Provide a list of purchased content for the authenticated account, such as rentals and electronic sell through purchases.",
			"params": [
				{
					"name": "request",
					"summary": "A Discovery.PurchasedContentFederatedRequest object.",
					"schema": {
						"$ref": "#/components/schemas/Discovery.PurchasedContentFederatedRequest"
					}
				}
			],
			"examples": [
				{
					"name": "Inform the platform of the user's purchased content",
					"params": [
						{
							"name": "request",
							"value": {
								"correlationId": "xyz",
								"parameters": {
									"limit": 100
								}
							}
						}
					]
				}
			],
			"description": "Return content purchased by the user, such as rentals and electronic sell through purchases.\n\nThe app should return the user's 100 most recent purchases in `entries`. The total count of purchases must be provided in `count`. If `count` is greater than the total number of `entries`, the UI may provide a link into the app to see the complete purchase list.\n\nThe `EntityInfo` object returned is not required to have `waysToWatch` populated, but it is recommended that it do so in case the UI wants to surface additional information on the purchases screen.\n\nThe app should implement both Push and Pull methods for `purchasedContent`.\n\nThe app should actively push `purchasedContent` when:\n\n*  The app becomes Active.\n*  When the state of the purchasedContent set has changed.\n*  The app goes into Inactive or Background state, if there is a chance a change event has been missed."
		},
		{
			"name": "Lifecycle.inactive",
			"tags": [
				{
					"name": "notifier",
					"x-event": "Lifecycle.onInactive"
				},
				{
					"name": "capabilities",
					"x-uses": [
						"xrn:firebolt:capability:lifecycle:state"
					]
				}
			],
			"summary": "Listen to the inactive event",
			"params": [
				{
					"name": "value",
					"schema": {
						"$ref": "#/components/schemas/Lifecycle.LifecycleEvent"
					}
				}
			],
			"examples": [
				{
					"name": "Default Example",
					"params": [
						{
							"name": "value",
							"value": {
								"state": "inactive",
								"previous": "initializing"
							}
						}
					]
				}
			]
		},
		{
			"name": "Lifecycle.foreground",
			"tags": [
				{
					"name": "notifier",
					"x-event": "Lifecycle.onForeground"
				},
				{
					"name": "capabilities",
					"x-uses": [
						"xrn:firebolt:capability:lifecycle:state"
					]
				}
			],
			"summary": "Listen to the foreground event",
			"params": [
				{
					"name": "value",
					"schema": {
						"$ref": "#/components/schemas/Lifecycle.LifecycleEvent"
					}
				}
			],
			"examples": [
				{
					"name": "Default Example",
					"params": [
						{
							"name": "Default Result",
							"value": {
								"state": "foreground",
								"previous": "inactive"
							}
						}
					]
				},
				{
					"name": "Move to foreground via remote branded buton",
					"params": [
						{
							"name": "value",
							"value": {
								"state": "foreground",
								"previous": "inactive",
								"source": "remote"
							}
						}
					]
				}
			]
		},
		{
			"name": "Lifecycle.background",
			"tags": [
				{
					"name": "notifier",
					"x-event": "Lifecycle.onBackground"
				},
				{
					"name": "capabilities",
					"x-uses": [
						"xrn:firebolt:capability:lifecycle:state"
					]
				}
			],
			"summary": "Listen to the background event",
			"params": [
				{
					"name": "value",
					"schema": {
						"$ref": "#/components/schemas/Lifecycle.LifecycleEvent"
					}
				}
			],
			"examples": [
				{
					"name": "Default Example",
					"params": [
						{
							"name": "value",
							"value": {
								"state": "background",
								"previous": "foreground"
							}
						}
					]
				}
			]
		},
		{
			"name": "Lifecycle.suspended",
			"tags": [
				{
					"name": "notifier",
					"x-event": "Lifecycle.onSuspended"
				},
				{
					"name": "capabilities",
					"x-uses": [
						"xrn:firebolt:capability:lifecycle:state"
					]
				}
			],
			"summary": "Listen to the suspended event",
			"params": [
				{
					"name": "value",
					"schema": {
						"$ref": "#/components/schemas/Lifecycle.LifecycleEvent"
					}
				}
			],
			"examples": [
				{
					"name": "Default Example",
					"params": [
						{
							"name": "value",
							"value": {
								"state": "suspended",
								"previous": "inactive"
							}
						}
					]
				}
			]
		},
		{
			"name": "Lifecycle.unloading",
			"tags": [
				{
					"name": "notifier",
					"x-event": "Lifecycle.onUnloading"
				},
				{
					"name": "capabilities",
					"x-uses": [
						"xrn:firebolt:capability:lifecycle:state"
					]
				}
			],
			"summary": "Listen to the unloading event",
			"params": [
				{
					"name": "value",
					"schema": {
						"$ref": "#/components/schemas/Lifecycle.LifecycleEvent"
					}
				}
			],
			"examples": [
				{
					"name": "Default Example",
					"params": [
						{
							"name": "value",
							"value": {
								"state": "unloading",
								"previous": "inactive"
							}
						}
					]
				}
			]
		},
		{
			"name": "Localization.localityChanged",
			"tags": [
				{
					"name": "capabilities",
					"x-uses": [
						"xrn:firebolt:capability:localization:locality"
					]
				},
				{
					"name": "notifier",
					"x-notifier-for": "Localization.locality",
					"x-event": "Localization.onLocalityChanged"
				}
			],
			"summary": "Get the locality/city the device is located in",
			"params": [
				{
					"name": "locality",
					"summary": "the device city",
					"schema": {
						"$ref": "https://meta.rdkcentral.com/firebolt/schemas/localization#/definitions/Locality"
					}
				}
			],
			"examples": [
				{
					"name": "Default example #1",
					"params": [
						{
							"name": "Default Result",
							"value": "Philadelphia"
						}
					]
				},
				{
					"name": "Default example #2",
					"params": [
						{
							"name": "Default Result",
							"value": "Rockville"
						}
					]
				}
			]
		},
		{
			"name": "Localization.postalCodeChanged",
			"tags": [
				{
					"name": "notifier",
					"x-notifier-for": "Localization.postalCode",
					"x-event": "Localization.onPostalCodeChanged"
				},
				{
					"name": "capabilities",
					"x-uses": [
						"xrn:firebolt:capability:localization:postal-code"
					]
				}
			],
			"summary": "Get the postal code the device is located in",
			"params": [
				{
					"name": "postalCode",
					"summary": "the device postal code",
					"schema": {
						"type": "string"
					}
				}
			],
			"examples": [
				{
					"name": "Default example #1",
					"params": [
						{
							"name": "Default Result",
							"value": "19103"
						}
					]
				},
				{
					"name": "Default example #2",
					"params": [
						{
							"name": "Default Result",
							"value": "20850"
						}
					]
				}
			]
		},
		{
			"name": "Localization.countryCodeChanged",
			"tags": [
				{
					"name": "notifier",
					"x-notifier-for": "Localization.countryCode",
					"x-event": "Localization.onCountryCodeChanged"
				},
				{
					"name": "capabilities",
					"x-uses": [
						"xrn:firebolt:capability:localization:country-code"
					]
				}
			],
			"summary": "Get the ISO 3166-1 alpha-2 code for the country device is located in",
			"params": [
				{
					"name": "code",
					"summary": "the device country code",
					"schema": {
						"$ref": "https://meta.rdkcentral.com/firebolt/schemas/localization#/definitions/CountryCode"
					}
				}
			],
			"examples": [
				{
					"name": "Default example #1",
					"params": [
						{
							"name": "Default Result",
							"value": "US"
						}
					]
				},
				{
					"name": "Default example #2",
					"params": [
						{
							"name": "Default Result",
							"value": "UK"
						}
					]
				}
			]
		},
		{
			"name": "Localization.languageChanged",
			"summary": "Get the ISO 639 1/2 code for the preferred language",
			"params": [
				{
					"name": "lang",
					"summary": "the device language",
					"schema": {
						"$ref": "https://meta.rdkcentral.com/firebolt/schemas/localization#/definitions/Language"
					}
				}
			],
			"tags": [
				{
					"name": "deprecated",
					"x-since": "0.17.0",
					"x-alternative": "Localization.locale"
				},
				{
					"name": "notifier",
					"x-notifier-for": "Localization.language",
					"x-event": "Localization.onLanguageChanged"
				},
				{
					"name": "capabilities",
					"x-uses": [
						"xrn:firebolt:capability:localization:language"
					]
				}
			],
			"examples": [
				{
					"name": "Default example #1",
					"params": [
						{
							"name": "Default Result",
							"value": "en"
						}
					]
				},
				{
					"name": "Default example #2",
					"params": [
						{
							"name": "Default Result",
							"value": "es"
						}
					]
				}
			]
		},
		{
			"name": "Localization.preferredAudioLanguagesChanged",
			"summary": "A prioritized list of ISO 639 1/2 codes for the preferred audio languages on this device.",
			"params": [
				{
					"name": "languages",
					"summary": "the preferred audio languages",
					"schema": {
						"type": "array",
						"items": {
							"$ref": "https://meta.rdkcentral.com/firebolt/schemas/localization#/definitions/ISO639_2Language"
						}
					}
				}
			],
			"tags": [
				{
					"name": "notifier",
					"x-notifier-for": "Localization.preferredAudioLanguages",
					"x-event": "Localization.onPreferredAudioLanguagesChanged"
				},
				{
					"name": "capabilities",
					"x-uses": [
						"xrn:firebolt:capability:localization:language"
					]
				}
			],
			"examples": [
				{
					"name": "Default Example",
					"params": [
						{
							"name": "Default Result",
							"value": [
								"spa",
								"eng"
							]
						}
					]
				},
				{
					"name": "Default Example #2",
					"params": [
						{
							"name": "Default Result",
							"value": [
								"eng",
								"spa"
							]
						}
					]
				}
			]
		},
		{
			"name": "Localization.localeChanged",
			"tags": [
				{
					"name": "notifier",
					"x-notifier-for": "Localization.locale",
					"x-event": "Localization.onLocaleChanged"
				},
				{
					"name": "capabilities",
					"x-uses": [
						"xrn:firebolt:capability:localization:locale"
					]
				}
			],
			"summary": "Get the *full* BCP 47 code, including script, region, variant, etc., for the preferred langauage/locale",
			"params": [
				{
					"name": "locale",
					"summary": "the device locale",
					"schema": {
						"$ref": "https://meta.rdkcentral.com/firebolt/schemas/localization#/definitions/Locale"
					}
				}
			],
			"examples": [
				{
					"name": "Default example #1",
					"params": [
						{
							"name": "Default Result",
							"value": "en-US"
						}
					]
				},
				{
					"name": "Default example #2",
					"params": [
						{
							"name": "Default Result",
							"value": "es-US"
						}
					]
				}
			]
		},
		{
			"name": "SecondScreen.launchRequest",
			"tags": [
				{
					"name": "notifier",
					"x-event": "SecondScreen.onLaunchRequest"
				},
				{
					"name": "capabilities",
					"x-uses": [
						"xrn:firebolt:capability:protocol:dial"
					]
				}
			],
			"summary": "Listen to the launchRequest event",
			"params": [
				{
					"name": "launchRequestEvent",
					"summary": "Dispatched when a second screen device on the local network has requested this app to be launched",
					"schema": {
						"$ref": "https://meta.rdkcentral.com/firebolt/schemas/secondscreen#/definitions/SecondScreenEvent"
					}
				}
			],
			"examples": [
				{
					"name": "Default Example",
					"params": [
						{
							"name": "launchRequestEvent",
							"value": {
								"type": "dial",
								"version": "1.7",
								"data": "{\"code\":\"AQDPQZiQcb3KQ7gY7yy5tHTMbbkGHR9Zjp-KL53H3eKBZIeAt7O9UKYPu6B21l2UZVmIqkFXDXBmXvK4g2e3EgZtjMNmKPsTltgnRl95DImtOXjSpWtTjSaOkW4w1kZKUTwLKdwVWTzBVH8ERHorvLU6vCGOVHxXt65LNwdl5HKRweShVC1V9QsyvRnQS61ov0UclmrH_xZML2Bt-Q-rZFjey5MjwupIb4x4f53XUJMhjHpDHoIUKrjpdPDQvK2a\",\"friendlyName\":\"Operator_TX061AEI\",\"UDN\":\"608fef11-2800-482a-962b-23a6690c93c1\"}"
							}
						}
					]
				}
			]
		},
		{
			"name": "SecondScreen.closeRequest",
			"tags": [
				{
					"name": "notifier",
					"x-event": "SecondScreen.onCloseRequest"
				},
				{
					"name": "capabilities",
					"x-uses": [
						"xrn:firebolt:capability:protocol:dial"
					]
				}
			],
			"summary": "Listen to the closeRequest event",
			"params": [
				{
					"name": "closeRequestEvent",
					"schema": {
						"$ref": "https://meta.rdkcentral.com/firebolt/schemas/secondscreen#/definitions/SecondScreenEvent"
					}
				}
			],
			"examples": [
				{
					"name": "Default Example",
					"params": [
						{
							"name": "closeRequestEvent",
							"value": {
								"type": "dial",
								"version": "1.7"
							}
						}
					]
				}
			]
		},
		{
			"name": "SecondScreen.friendlyNameChanged",
			"summary": "Get the broadcasted friendly name for the device",
			"params": [
				{
					"name": "friendlyName",
					"summary": "the device friendly-name",
					"schema": {
						"type": "string"
					}
				}
			],
			"tags": [
				{
					"name": "notifier",
					"x-notifier-for": "SecondScreen.friendlyName",
					"x-event": "SecondScreen.onFriendlyNameChanged"
				},
				{
					"name": "capabilities",
					"x-uses": [
						"xrn:firebolt:capability:protocol:dial"
					]
				}
			],
			"examples": [
				{
					"name": "Default Example",
					"params": [
						{
							"name": "friendlyName",
							"value": "Living Room"
						}
					]
				}
			]
		}
	],
	"components": {
		"schemas": {
			"Accessibility.AudioDescriptionSettings": {
				"title": "AudioDescriptionSettings",
				"type": "object",
				"required": [
					"enabled"
				],
				"properties": {
					"enabled": {
						"type": "boolean",
						"description": "Whether or not audio descriptions should be enabled by default"
					}
				}
			},
			"Advertising.AdPolicy": {
				"title": "AdPolicy",
				"description": "Describes various ad playback enforcement rules that the app should follow.",
				"type": "object",
				"properties": {
					"skipRestriction": {
						"$ref": "https://meta.rdkcentral.com/firebolt/schemas/advertising#/definitions/SkipRestriction"
					},
					"limitAdTracking": {
						"type": "boolean"
					}
				}
			},
			"Device.HDCPVersionMap": {
				"title": "HDCPVersionMap",
				"type": "object",
				"properties": {
					"hdcp1.4": {
						"type": "boolean"
					},
					"hdcp2.2": {
						"type": "boolean"
					}
				},
				"required": [
					"hdcp1.4",
					"hdcp2.2"
				],
				"description": "The type of HDCP versions"
			},
			"Device.HDRFormatMap": {
				"title": "HDRFormatMap",
				"type": "object",
				"properties": {
					"hdr10": {
						"type": "boolean"
					},
					"hdr10Plus": {
						"type": "boolean"
					},
					"dolbyVision": {
						"type": "boolean"
					},
					"hlg": {
						"type": "boolean"
					}
				},
				"required": [
					"hdr10",
					"hdr10Plus",
					"dolbyVision",
					"hlg"
				],
				"description": "The type of HDR format"
			},
			"Device.AudioProfiles": {
				"title": "AudioProfiles",
				"type": "object",
				"properties": {
					"stereo": {
						"type": "boolean"
					},
					"dolbyDigital5.1": {
						"type": "boolean"
					},
					"dolbyDigital5.1+": {
						"type": "boolean"
					},
					"dolbyAtmos": {
						"type": "boolean"
					}
				},
				"required": [
					"stereo",
					"dolbyDigital5.1",
					"dolbyDigital5.1+",
					"dolbyAtmos"
				]
			},
			"Device.Resolution": {
				"type": "array",
				"items": [
					{
						"type": "integer"
					},
					{
						"type": "integer"
					}
				],
				"additionalItems": false,
				"minItems": 2,
				"maxItems": 2
			},
			"Device.NetworkInfoResult": {
				"title": "NetworkInfoResult",
				"type": "object",
				"properties": {
					"state": {
						"$ref": "#/components/schemas/Device.NetworkState"
					},
					"type": {
						"$ref": "#/components/schemas/Device.NetworkType"
					}
				},
				"required": [
					"state",
					"type"
				]
			},
			"Discovery.DiscoveryPolicy": {
				"title": "DiscoveryPolicy",
				"type": "object",
				"required": [
					"enableRecommendations",
					"shareWatchHistory",
					"rememberWatchedPrograms"
				],
				"properties": {
					"enableRecommendations": {
						"type": "boolean",
						"description": "Whether or not to the user has enabled history-based recommendations"
					},
					"shareWatchHistory": {
						"type": "boolean",
						"description": "Whether or not the user has enabled app watch history data to be shared with the platform"
					},
					"rememberWatchedPrograms": {
						"type": "boolean",
						"description": "Whether or not the user has enabled watch history"
					}
				}
			},
			"Discovery.EntityInfoFederatedRequest": {
				"title": "EntityInfoFederatedRequest",
				"allOf": [
					{
						"$ref": "#/components/schemas/Discovery.FederatedRequest"
					},
					{
						"type": "object",
						"properties": {
							"parameters": {
								"$ref": "#/components/schemas/Discovery.EntityInfoParameters"
							}
						},
						"required": [
							"correlationId",
							"parameters"
						]
					}
				],
				"examples": [
					{
						"correlationId": "xyz",
						"parameters": {
							"entityId": "345"
						}
					}
				]
			},
			"Discovery.PurchasedContentFederatedRequest": {
				"title": "PurchasedContentFederatedRequest",
				"allOf": [
					{
						"$ref": "#/components/schemas/Discovery.FederatedRequest"
					},
					{
						"type": "object",
						"properties": {
							"parameters": {
								"$ref": "#/components/schemas/Discovery.PurchasedContentParameters"
							}
						},
						"required": [
							"correlationId",
							"parameters"
						]
					}
				],
				"examples": [
					{
						"correlationId": "xyz",
						"parameters": {
							"limit": 100
						}
					}
				]
			},
			"Lifecycle.LifecycleEvent": {
				"title": "LifecycleEvent",
				"description": "A an object describing the previous and current states",
				"type": "object",
				"required": [
					"state",
					"previous"
				],
				"properties": {
					"state": {
						"$ref": "https://meta.rdkcentral.com/firebolt/schemas/lifecycle#/definitions/LifecycleState",
						"description": "The current lifcycle state"
					},
					"previous": {
						"$ref": "https://meta.rdkcentral.com/firebolt/schemas/lifecycle#/definitions/LifecycleState",
						"description": "The previous lifcycle state"
					},
					"source": {
						"type": "string",
						"enum": [
							"voice",
							"remote"
						],
						"description": "The source of the lifecycle change."
					}
				}
			},
			"Device.NetworkState": {
				"title": "NetworkState",
				"type": "string",
				"enum": [
					"connected",
					"disconnected"
				],
				"description": "The type of network that is currently active"
			},
			"Device.NetworkType": {
				"title": "NetworkType",
				"type": "string",
				"enum": [
					"wifi",
					"ethernet",
					"hybrid"
				],
				"description": "The type of network that is currently active"
			},
			"Discovery.FederatedRequest": {
				"title": "FederatedRequest",
				"type": "object",
				"properties": {
					"correlationId": {
						"type": "string"
					}
				},
				"required": [
					"correlationId"
				],
				"propertyNames": {
					"enum": [
						"correlationId",
						"parameters"
					]
				},
				"examples": [
					{
						"correlationId": "xyz"
					}
				]
			},
			"Discovery.EntityInfoParameters": {
				"title": "EntityInfoParameters",
				"type": "object",
				"properties": {
					"entityId": {
						"type": "string"
					},
					"assetId": {
						"type": "string"
					}
				},
				"required": [
					"entityId"
				],
				"additionalProperties": false,
				"examples": [
					{
						"entityId": "345"
					}
				]
			},
			"Discovery.PurchasedContentParameters": {
				"title": "PurchasedContentParameters",
				"type": "object",
				"properties": {
					"limit": {
						"type": "integer",
						"minimum": -1
					},
					"offeringType": {
						"$ref": "https://meta.rdkcentral.com/firebolt/schemas/entertainment#/definitions/OfferingType"
					},
					"programType": {
						"$ref": "https://meta.rdkcentral.com/firebolt/schemas/entertainment#/definitions/ProgramType"
					}
				},
				"required": [
					"limit"
				],
				"additionalProperties": false,
				"examples": [
					{
						"limit": 100
					}
				]
			},
			"https://meta.rdkcentral.com/firebolt/schemas/accessibility": {
				"$id": "https://meta.rdkcentral.com/firebolt/schemas/accessibility",
				"title": "Accessibility",
				"anyOf": [
					{
						"$ref": "https://meta.rdkcentral.com/firebolt/schemas/accessibility#/definitions/ClosedCaptionsStyles"
					},
					{
						"$ref": "https://meta.rdkcentral.com/firebolt/schemas/accessibility#/definitions/ClosedCaptionsSettings"
					}
				],
				"definitions": {
					"FontFamily": {
						"type": [
							"string",
							"null"
						],
						"enum": [
							"monospaced_serif",
							"proportional_serif",
							"monospaced_sanserif",
							"proportional_sanserif",
							"smallcaps",
							"cursive",
							"casual",
							null
						]
					},
					"FontSize": {
						"type": [
							"number",
							"null"
						],
						"minimum": 0
					},
					"FontEdge": {
						"type": [
							"string",
							"null"
						],
						"enum": [
							"none",
							"raised",
							"depressed",
							"uniform",
							"drop_shadow_left",
							"drop_shadow_right",
							null
						]
					},
					"Color": {
						"type": [
							"string",
							"null"
						]
					},
					"Opacity": {
						"type": [
							"number",
							"null"
						],
						"minimum": 0,
						"maximum": 100
					},
					"HorizontalAlignment": {
						"type": [
							"string",
							"null"
						]
					},
					"VerticalAlignment": {
						"type": [
							"string",
							"null"
						]
					},
					"ClosedCaptionsStyles": {
						"title": "ClosedCaptionsStyles",
						"type": "object",
						"description": "The default styles to use when displaying closed-captions",
						"properties": {
							"fontFamily": {
								"$ref": "https://meta.rdkcentral.com/firebolt/schemas/accessibility#/definitions/FontFamily"
							},
							"fontSize": {
								"$ref": "https://meta.rdkcentral.com/firebolt/schemas/accessibility#/definitions/FontSize"
							},
							"fontColor": {
								"$ref": "https://meta.rdkcentral.com/firebolt/schemas/accessibility#/definitions/Color"
							},
							"fontEdge": {
								"$ref": "https://meta.rdkcentral.com/firebolt/schemas/accessibility#/definitions/FontEdge"
							},
							"fontEdgeColor": {
								"$ref": "https://meta.rdkcentral.com/firebolt/schemas/accessibility#/definitions/Color"
							},
							"fontOpacity": {
								"$ref": "https://meta.rdkcentral.com/firebolt/schemas/accessibility#/definitions/Opacity"
							},
							"backgroundColor": {
								"$ref": "https://meta.rdkcentral.com/firebolt/schemas/accessibility#/definitions/Color"
							},
							"backgroundOpacity": {
								"$ref": "https://meta.rdkcentral.com/firebolt/schemas/accessibility#/definitions/Opacity"
							},
							"textAlign": {
								"$ref": "https://meta.rdkcentral.com/firebolt/schemas/accessibility#/definitions/HorizontalAlignment"
							},
							"textAlignVertical": {
								"$ref": "https://meta.rdkcentral.com/firebolt/schemas/accessibility#/definitions/VerticalAlignment"
							},
							"windowColor": {
								"$ref": "https://meta.rdkcentral.com/firebolt/schemas/accessibility#/definitions/Color"
							},
							"windowOpacity": {
								"$ref": "https://meta.rdkcentral.com/firebolt/schemas/accessibility#/definitions/Opacity"
							}
						}
					},
					"ClosedCaptionsSettings": {
						"title": "ClosedCaptionsSettings",
						"type": "object",
						"required": [
							"enabled"
						],
						"properties": {
							"enabled": {
								"type": "boolean",
								"description": "Whether or not closed-captions should be enabled by default"
							},
							"styles": {
								"$ref": "https://meta.rdkcentral.com/firebolt/schemas/accessibility#/definitions/ClosedCaptionsStyles"
							},
							"preferredLanguages": {
								"type": "array",
								"items": {
									"$ref": "https://meta.rdkcentral.com/firebolt/schemas/localization#/definitions/ISO639_2Language"
								}
							}
						},
						"examples": [
							{
								"enabled": true,
								"styles": {
									"fontFamily": "monospaced_serif",
									"fontSize": 1,
									"fontColor": "#ffffff",
									"fontEdge": "none",
									"fontEdgeColor": "#7F7F7F",
									"fontOpacity": 100,
									"backgroundColor": "#000000",
									"backgroundOpacity": 100,
									"textAlign": "center",
									"textAlignVertical": "middle",
									"windowColor": "white",
									"windowOpacity": 50
								},
								"preferredLanguages": [
									"eng",
									"spa"
								]
							}
						]
					},
					"SpeechRate": {
						"title": "SpeechRate",
						"type": "number",
						"minimum": 0.1,
						"maximum": 10
					},
					"VoiceGuidanceSettings": {
						"title": "VoiceGuidanceSettings",
						"type": "object",
						"required": [
							"enabled",
							"navigationHints",
							"rate"
						],
						"properties": {
							"enabled": {
								"type": "boolean",
								"description": "Whether or not voice guidance should be enabled by default"
							},
							"navigationHints": {
								"type": "boolean",
								"description": "Whether or not voice guidance should include additional navigation hints"
							},
							"rate": {
								"$ref": "https://meta.rdkcentral.com/firebolt/schemas/accessibility#/definitions/SpeechRate",
								"description": "The rate at which voice guidance speech will be read back to the user"
							},
							"speed": {
								"$ref": "https://meta.rdkcentral.com/firebolt/schemas/accessibility#/definitions/SpeechRate",
								"description": "**DEPRECATED** Use rate instead. The rate at which voice guidance speech will be read back to the user"
							}
						},
						"examples": [
							{
								"enabled": true,
								"navigationHints": true,
								"rate": 1,
								"speed": 1
							}
						]
					}
				}
			},
			"https://meta.rdkcentral.com/firebolt/schemas/capabilities": {
				"title": "Capabilities",
				"$id": "https://meta.rdkcentral.com/firebolt/schemas/capabilities",
				"oneOf": [
					{
						"$ref": "https://meta.rdkcentral.com/firebolt/schemas/capabilities#/definitions/Capability"
					},
					{
						"$ref": "https://meta.rdkcentral.com/firebolt/schemas/capabilities#/definitions/Role"
					},
					{
						"$ref": "https://meta.rdkcentral.com/firebolt/schemas/capabilities#/definitions/DenyReason"
					},
					{
						"$ref": "https://meta.rdkcentral.com/firebolt/schemas/capabilities#/definitions/CapabilityInfo"
					}
				],
				"definitions": {
					"Capability": {
						"title": "Capability",
						"type": "string",
						"description": "A Capability is a discrete unit of functionality that a Firebolt device might be able to perform.",
						"pattern": "^xrn:firebolt:capability:([a-z0-9\\-]+)((:[a-z0-9\\-]+)?)$"
					},
					"Role": {
						"title": "Role",
						"description": "Role provides access level for the app for a given capability.",
						"type": "string",
						"enum": [
							"use",
							"manage",
							"provide"
						]
					},
					"DenyReason": {
						"title": "DenyReason",
						"description": "Reasons why a Capability might not be invokable",
						"type": "string",
						"enum": [
							"unpermitted",
							"unsupported",
							"disabled",
							"unavailable",
							"grantDenied",
							"ungranted"
						]
					},
					"CapPermissionStatus": {
						"type": "object",
						"properties": {
							"permitted": {
								"type": "boolean",
								"description": "Provides info whether the capability is permitted"
							},
							"granted": {
								"oneOf": [
									{
										"type": "boolean",
										"description": "Provides info whether the capability is granted"
									},
									{
										"const": null
									}
								]
							}
						},
						"additionalProperties": false
					},
					"CapabilityInfo": {
						"title": "CapabilityInfo",
						"type": "object",
						"required": [
							"supported",
							"available",
							"use",
							"manage",
							"provide"
						],
						"properties": {
							"capability": {
								"$ref": "https://meta.rdkcentral.com/firebolt/schemas/capabilities#/definitions/Capability"
							},
							"supported": {
								"type": "boolean",
								"description": "Provides info whether the capability is supported"
							},
							"available": {
								"type": "boolean",
								"description": "Provides info whether the capability is available"
							},
							"use": {
								"$ref": "https://meta.rdkcentral.com/firebolt/schemas/capabilities#/definitions/CapPermissionStatus"
							},
							"manage": {
								"$ref": "https://meta.rdkcentral.com/firebolt/schemas/capabilities#/definitions/CapPermissionStatus"
							},
							"provide": {
								"$ref": "https://meta.rdkcentral.com/firebolt/schemas/capabilities#/definitions/CapPermissionStatus"
							},
							"details": {
								"type": "array",
								"items": {
									"$ref": "https://meta.rdkcentral.com/firebolt/schemas/capabilities#/definitions/DenyReason"
								},
								"minItems": 1,
								"maxItems": 6
							}
						},
						"additionalProperties": false,
						"examples": [
							{
								"capability": "xrn:firebolt:capability:keyboard",
								"supported": true,
								"available": true,
								"use": {
									"permitted": true,
									"granted": true
								},
								"manage": {
									"permitted": true,
									"granted": true
								},
								"provide": {
									"permitted": true,
									"granted": true
								}
							}
						]
					}
				}
			},
			"https://meta.rdkcentral.com/firebolt/schemas/intents": {
				"title": "Intents",
				"$id": "https://meta.rdkcentral.com/firebolt/schemas/intents",
				"definitions": {
					"Intent": {
						"description": "A Firebolt compliant representation of a user intention.",
						"type": "object",
						"required": [
							"action",
							"context"
						],
						"properties": {
							"action": {
								"type": "string"
							},
							"context": {
								"type": "object",
								"required": [
									"source"
								],
								"properties": {
									"source": {
										"type": "string"
									}
								}
							}
						}
					},
					"IntentProperties": {
						"type": "object",
						"propertyNames": {
							"enum": [
								"action",
								"data",
								"context"
							]
						}
					},
					"NavigationIntent": {
						"title": "NavigationIntent",
						"description": "A Firebolt compliant representation of a user intention to navigate to a specific place in an app.",
						"anyOf": [
							{
								"$ref": "https://meta.rdkcentral.com/firebolt/schemas/intents#/definitions/HomeIntent"
							},
							{
								"$ref": "https://meta.rdkcentral.com/firebolt/schemas/intents#/definitions/LaunchIntent"
							},
							{
								"$ref": "https://meta.rdkcentral.com/firebolt/schemas/intents#/definitions/EntityIntent"
							},
							{
								"$ref": "https://meta.rdkcentral.com/firebolt/schemas/intents#/definitions/PlaybackIntent"
							},
							{
								"$ref": "https://meta.rdkcentral.com/firebolt/schemas/intents#/definitions/SearchIntent"
							},
							{
								"$ref": "https://meta.rdkcentral.com/firebolt/schemas/intents#/definitions/SectionIntent"
							},
							{
								"$ref": "https://meta.rdkcentral.com/firebolt/schemas/intents#/definitions/TuneIntent"
							},
							{
								"$ref": "https://meta.rdkcentral.com/firebolt/schemas/intents#/definitions/PlayEntityIntent"
							},
							{
								"$ref": "https://meta.rdkcentral.com/firebolt/schemas/intents#/definitions/PlayQueryIntent"
							}
						]
					},
					"LaunchIntent": {
						"description": "A Firebolt compliant representation of a user intention to launch an app.",
						"title": "LaunchIntent",
						"allOf": [
							{
								"$ref": "https://meta.rdkcentral.com/firebolt/schemas/intents#/definitions/Intent"
							},
							{
								"$ref": "https://meta.rdkcentral.com/firebolt/schemas/intents#/definitions/IntentProperties"
							},
							{
								"type": "object",
								"properties": {
									"action": {
										"const": "launch"
									}
								},
								"not": {
									"required": [
										"data"
									]
								}
							}
						],
						"examples": [
							{
								"action": "launch",
								"context": {
									"source": "voice"
								}
							}
						]
					},
					"HomeIntent": {
						"description": "A Firebolt compliant representation of a user intention to navigate an app to it's home screen, and bring that app to the foreground if needed.",
						"title": "HomeIntent",
						"allOf": [
							{
								"title": "HomeIntent",
								"$ref": "https://meta.rdkcentral.com/firebolt/schemas/intents#/definitions/Intent"
							},
							{
								"title": "HomeIntent",
								"$ref": "https://meta.rdkcentral.com/firebolt/schemas/intents#/definitions/IntentProperties"
							},
							{
								"title": "HomeIntent",
								"type": "object",
								"properties": {
									"action": {
										"const": "home"
									}
								},
								"not": {
									"required": [
										"data"
									]
								}
							}
						],
						"examples": [
							{
								"action": "home",
								"context": {
									"source": "voice"
								}
							}
						]
					},
					"EntityIntent": {
						"description": "A Firebolt compliant representation of a user intention to navigate an app to a specific entity page, and bring that app to the foreground if needed.",
						"title": "EntityIntent",
						"allOf": [
							{
								"$ref": "https://meta.rdkcentral.com/firebolt/schemas/intents#/definitions/Intent"
							},
							{
								"$ref": "https://meta.rdkcentral.com/firebolt/schemas/intents#/definitions/IntentProperties"
							},
							{
								"type": "object",
								"required": [
									"data"
								],
								"properties": {
									"action": {
										"const": "entity"
									},
									"data": {
										"$ref": "https://meta.rdkcentral.com/firebolt/schemas/entity#/definitions/Entity"
									}
								}
							}
						],
						"examples": [
							{
								"action": "entity",
								"context": {
									"source": "voice"
								},
								"data": {
									"entityType": "program",
									"programType": "movie",
									"entityId": "el-camino"
								}
							}
						]
					},
					"TuneIntent": {
						"description": "A Firebolt compliant representation of a user intention to 'tune' to a traditional over-the-air broadcast, or an OTT Stream from an OTT or vMVPD App.",
						"title": "TuneIntent",
						"allOf": [
							{
								"$ref": "https://meta.rdkcentral.com/firebolt/schemas/intents#/definitions/Intent"
							},
							{
								"$ref": "https://meta.rdkcentral.com/firebolt/schemas/intents#/definitions/IntentProperties"
							},
							{
								"type": "object",
								"required": [
									"data"
								],
								"properties": {
									"action": {
										"const": "tune"
									},
									"data": {
										"type": "object",
										"required": [
											"entity"
										],
										"additionalProperties": false,
										"properties": {
											"entity": {
												"$ref": "https://meta.rdkcentral.com/firebolt/schemas/entity#/definitions/ChannelEntity"
											},
											"options": {
												"description": "The options property of the data property MUST have only one of the following fields.",
												"type": "object",
												"required": [],
												"additionalProperties": false,
												"minProperties": 1,
												"maxProperties": 1,
												"properties": {
													"assetId": {
														"type": "string",
														"description": "The ID of a specific 'listing', as scoped by the target App's ID-space, which the App should begin playback from."
													},
													"restartCurrentProgram": {
														"type": "boolean",
														"description": "Denotes that the App should start playback at the most recent program boundary, rather than 'live.'"
													},
													"time": {
														"type": "string",
														"format": "date-time",
														"description": "ISO 8601 Date/Time where the App should begin playback from."
													}
												}
											}
										}
									}
								}
							}
						],
						"examples": [
							{
								"action": "tune",
								"data": {
									"entity": {
										"entityType": "channel",
										"channelType": "streaming",
										"entityId": "an-ott-channel"
									},
									"options": {
										"restartCurrentProgram": true
									}
								},
								"context": {
									"source": "voice"
								}
							}
						]
					},
					"PlaybackIntent": {
						"description": "A Firebolt compliant representation of a user intention to navigate an app to a the video player for a specific, playable entity, and bring that app to the foreground if needed.",
						"title": "PlaybackIntent",
						"allOf": [
							{
								"$ref": "https://meta.rdkcentral.com/firebolt/schemas/intents#/definitions/Intent"
							},
							{
								"$ref": "https://meta.rdkcentral.com/firebolt/schemas/intents#/definitions/IntentProperties"
							},
							{
								"type": "object",
								"required": [
									"data"
								],
								"properties": {
									"action": {
										"const": "playback"
									},
									"data": {
										"$ref": "https://meta.rdkcentral.com/firebolt/schemas/entity#/definitions/PlayableEntity"
									}
								}
							}
						],
						"examples": [
							{
								"action": "playback",
								"data": {
									"entityType": "program",
									"programType": "episode",
									"entityId": "breaking-bad-pilot",
									"seriesId": "breaking-bad",
									"seasonId": "breaking-bad-season-1"
								},
								"context": {
									"source": "voice"
								}
							}
						]
					},
					"SearchIntent": {
						"description": "A Firebolt compliant representation of a user intention to navigate an app to it's search UI with a search term populated, and bring that app to the foreground if needed.",
						"title": "SearchIntent",
						"allOf": [
							{
								"$ref": "https://meta.rdkcentral.com/firebolt/schemas/intents#/definitions/Intent"
							},
							{
								"$ref": "https://meta.rdkcentral.com/firebolt/schemas/intents#/definitions/IntentProperties"
							},
							{
								"type": "object",
								"properties": {
									"action": {
										"const": "search"
									},
									"data": {
										"type": "object",
										"required": [
											"query"
										],
										"properties": {
											"query": {
												"type": "string"
											}
										},
										"additionalProperties": false
									}
								}
							}
						],
						"examples": [
							{
								"action": "search",
								"data": {
									"query": "walter white"
								},
								"context": {
									"source": "voice"
								}
							}
						]
					},
					"SectionIntent": {
						"description": "A Firebolt compliant representation of a user intention to navigate an app to a section not covered by `home`, `entity`, `player`, or `search`, and bring that app to the foreground if needed.",
						"title": "SectionIntent",
						"allOf": [
							{
								"$ref": "https://meta.rdkcentral.com/firebolt/schemas/intents#/definitions/Intent"
							},
							{
								"$ref": "https://meta.rdkcentral.com/firebolt/schemas/intents#/definitions/IntentProperties"
							},
							{
								"type": "object",
								"properties": {
									"action": {
										"const": "section"
									},
									"data": {
										"type": "object",
										"required": [
											"sectionName"
										],
										"properties": {
											"sectionName": {
												"type": "string"
											}
										},
										"additionalProperties": false
									}
								},
								"required": [
									"data"
								]
							}
						],
						"examples": [
							{
								"action": "section",
								"data": {
									"sectionName": "settings"
								},
								"context": {
									"source": "voice"
								}
							}
						]
					},
					"PlayEntityIntent": {
						"description": "A Firebolt compliant representation of a user intention to navigate an app to a the video player for a specific, playable entity, and bring that app to the foreground if needed.",
						"title": "PlayEntityIntent",
						"allOf": [
							{
								"$ref": "https://meta.rdkcentral.com/firebolt/schemas/intents#/definitions/Intent"
							},
							{
								"$ref": "https://meta.rdkcentral.com/firebolt/schemas/intents#/definitions/IntentProperties"
							},
							{
								"type": "object",
								"required": [
									"data"
								],
								"properties": {
									"action": {
										"const": "play-entity"
									},
									"data": {
										"type": "object",
										"properties": {
											"entity": {
												"$ref": "https://meta.rdkcentral.com/firebolt/schemas/entity#/definitions/PlayableEntity"
											},
											"options": {
												"type": "object",
												"properties": {
													"playFirstId": {
														"type": "string"
													},
													"playFirstTrack": {
														"type": "integer",
														"minimum": 1
													}
												},
												"additionalProperties": false
											}
										},
										"required": [
											"entity"
										],
										"propertyNames": {
											"enum": [
												"entity",
												"options"
											]
										},
										"if": {
											"properties": {
												"entity": {
													"type": "object",
													"required": [
														"entityType"
													],
													"properties": {
														"entityType": {
															"const": "playlist"
														}
													}
												}
											}
										},
										"then": {
											"type": "object",
											"properties": {
												"options": {
													"type": "object",
													"maxProperties": 1
												}
											}
										},
										"else": {
											"type": "object",
											"properties": {
												"options": {
													"type": "object",
													"maxProperties": 0
												}
											}
										}
									}
								}
							}
						],
						"examples": [
							{
								"action": "play-entity",
								"data": {
									"entity": {
										"entityType": "playlist",
										"entityId": "playlist/xyz"
									},
									"options": {
										"playFirstId": "song/xyz"
									}
								},
								"context": {
									"source": "voice"
								}
							},
							{
								"action": "play-entity",
								"data": {
									"entity": {
										"entityType": "playlist",
										"entityId": "playlist/xyz"
									},
									"options": {
										"playFirstTrack": 3
									}
								},
								"context": {
									"source": "voice"
								}
							}
						]
					},
					"PlayQueryIntent": {
						"description": "A Firebolt compliant representation of a user intention to navigate an app to a the video player for an abstract query to be searched for and played by the app.",
						"title": "PlayQueryIntent",
						"allOf": [
							{
								"$ref": "https://meta.rdkcentral.com/firebolt/schemas/intents#/definitions/Intent"
							},
							{
								"$ref": "https://meta.rdkcentral.com/firebolt/schemas/intents#/definitions/IntentProperties"
							},
							{
								"type": "object",
								"required": [
									"data"
								],
								"properties": {
									"action": {
										"const": "play-query"
									},
									"data": {
										"type": "object",
										"properties": {
											"query": {
												"type": "string"
											},
											"options": {
												"type": "object",
												"properties": {
													"programTypes": {
														"type": "array",
														"items": {
															"$ref": "https://meta.rdkcentral.com/firebolt/schemas/entertainment#/definitions/ProgramType"
														}
													},
													"musicTypes": {
														"type": "array",
														"items": {
															"$ref": "https://meta.rdkcentral.com/firebolt/schemas/entertainment#/definitions/MusicType"
														}
													}
												},
												"additionalProperties": false
											}
										},
										"required": [
											"query"
										],
										"propertyNames": {
											"enum": [
												"query",
												"options"
											]
										}
									}
								}
							}
						],
						"examples": [
							{
								"action": "play-query",
								"data": {
									"query": "Ed Sheeran"
								},
								"context": {
									"source": "voice"
								}
							},
							{
								"action": "play-query",
								"data": {
									"query": "Ed Sheeran",
									"options": {
										"programTypes": [
											"movie"
										]
									}
								},
								"context": {
									"source": "voice"
								}
							},
							{
								"action": "play-query",
								"data": {
									"query": "Ed Sheeran",
									"options": {
										"programTypes": [
											"movie"
										],
										"musicTypes": [
											"song"
										]
									}
								},
								"context": {
									"source": "voice"
								}
							}
						]
					}
				}
			},
			"https://meta.rdkcentral.com/firebolt/schemas/discovery": {
				"title": "Discovery",
				"$id": "https://meta.rdkcentral.com/firebolt/schemas/discovery",
				"definitions": {
					"InterestType": {
						"title": "InterestType",
						"type": "string",
						"enum": [
							"interest",
							"disinterest"
						]
					},
					"InterestReason": {
						"title": "InterestReason",
						"type": "string",
						"enum": [
							"playlist",
							"reaction",
							"recording"
						]
					}
				}
			},
			"https://meta.rdkcentral.com/firebolt/schemas/entity": {
				"$id": "https://meta.rdkcentral.com/firebolt/schemas/entity",
				"title": "Entity",
				"oneOf": [
					{
						"$ref": "https://meta.rdkcentral.com/firebolt/schemas/entity#/definitions/Entity"
					},
					{
						"$ref": "https://meta.rdkcentral.com/firebolt/schemas/entity#/definitions/PlayableEntity"
					},
					{
						"$ref": "https://meta.rdkcentral.com/firebolt/schemas/entity#/definitions/EntityDetails"
					}
				],
				"definitions": {
					"Entity": {
						"oneOf": [
							{
								"$ref": "https://meta.rdkcentral.com/firebolt/schemas/entity#/definitions/ProgramEntity"
							},
							{
								"$ref": "https://meta.rdkcentral.com/firebolt/schemas/entity#/definitions/MusicEntity"
							},
							{
								"$ref": "https://meta.rdkcentral.com/firebolt/schemas/entity#/definitions/ChannelEntity"
							},
							{
								"$ref": "https://meta.rdkcentral.com/firebolt/schemas/entity#/definitions/UntypedEntity"
							},
							{
								"$ref": "https://meta.rdkcentral.com/firebolt/schemas/entity#/definitions/PlaylistEntity"
							}
						]
					},
					"EntityDetails": {
						"title": "EntityDetails",
						"type": "object",
						"required": [
							"identifiers"
						],
						"properties": {
							"identifiers": {
								"$ref": "https://meta.rdkcentral.com/firebolt/schemas/entity#/definitions/Entity"
							},
							"info": {
								"$ref": "https://meta.rdkcentral.com/firebolt/schemas/entity#/definitions/Metadata"
							},
							"waysToWatch": {
								"type": "array",
								"items": {
									"$ref": "https://meta.rdkcentral.com/firebolt/schemas/entertainment#/definitions/WayToWatch"
								},
								"description": "An array of ways a user is might watch this entity, regardless of entitlements."
							}
						}
					},
					"ChannelEntity": {
						"title": "ChannelEntity",
						"type": "object",
						"properties": {
							"entityType": {
								"const": "channel"
							},
							"channelType": {
								"type": "string",
								"enum": [
									"streaming",
									"overTheAir"
								]
							},
							"entityId": {
								"type": "string",
								"description": "ID of the channel, in the target App's scope."
							},
							"appContentData": {
								"type": "string",
								"maxLength": 256
							}
						},
						"required": [
							"entityType",
							"channelType",
							"entityId"
						],
						"additionalProperties": false
					},
					"ProgramEntity": {
						"title": "ProgramEntity",
						"oneOf": [
							{
								"$ref": "https://meta.rdkcentral.com/firebolt/schemas/entity#/definitions/MovieEntity"
							},
							{
								"$ref": "https://meta.rdkcentral.com/firebolt/schemas/entity#/definitions/TVEpisodeEntity"
							},
							{
								"$ref": "https://meta.rdkcentral.com/firebolt/schemas/entity#/definitions/TVSeasonEntity"
							},
							{
								"$ref": "https://meta.rdkcentral.com/firebolt/schemas/entity#/definitions/TVSeriesEntity"
							},
							{
								"$ref": "https://meta.rdkcentral.com/firebolt/schemas/entity#/definitions/AdditionalEntity"
							}
						]
					},
					"MusicEntity": {
						"title": "MusicEntity",
						"type": "object",
						"properties": {
							"entityType": {
								"const": "music"
							},
							"musicType": {
								"$ref": "https://meta.rdkcentral.com/firebolt/schemas/entertainment#/definitions/MusicType"
							},
							"entityId": {
								"type": "string"
							}
						},
						"required": [
							"entityType",
							"musicType",
							"entityId"
						]
					},
					"MovieEntity": {
						"title": "MovieEntity",
						"description": "A Firebolt compliant representation of a Movie entity.",
						"type": "object",
						"required": [
							"entityType",
							"programType",
							"entityId"
						],
						"properties": {
							"entityType": {
								"const": "program"
							},
							"programType": {
								"const": "movie"
							},
							"entityId": {
								"type": "string"
							},
							"assetId": {
								"type": "string"
							},
							"appContentData": {
								"type": "string",
								"maxLength": 256
							}
						},
						"additionalProperties": false,
						"examples": [
							{
								"entityType": "program",
								"programType": "movie",
								"entityId": "el-camino"
							}
						]
					},
					"TVEpisodeEntity": {
						"title": "TVEpisodeEntity",
						"description": "A Firebolt compliant representation of a TV Episode entity.",
						"type": "object",
						"required": [
							"entityType",
							"programType",
							"entityId",
							"seriesId",
							"seasonId"
						],
						"properties": {
							"entityType": {
								"const": "program"
							},
							"programType": {
								"const": "episode"
							},
							"entityId": {
								"type": "string"
							},
							"seriesId": {
								"type": "string"
							},
							"seasonId": {
								"type": "string"
							},
							"assetId": {
								"type": "string"
							},
							"appContentData": {
								"type": "string",
								"maxLength": 256
							}
						},
						"additionalProperties": false,
						"examples": [
							{
								"entityType": "program",
								"programType": "episode",
								"entityId": "breaking-bad-pilot",
								"seriesId": "breaking-bad",
								"seasonId": "breaking-bad-season-1"
							}
						]
					},
					"TVSeasonEntity": {
						"title": "TVSeasonEntity",
						"description": "A Firebolt compliant representation of a TV Season entity.",
						"type": "object",
						"required": [
							"entityType",
							"programType",
							"entityId",
							"seriesId"
						],
						"properties": {
							"entityType": {
								"const": "program"
							},
							"programType": {
								"const": "season"
							},
							"entityId": {
								"type": "string"
							},
							"seriesId": {
								"type": "string"
							},
							"assetId": {
								"type": "string"
							},
							"appContentData": {
								"type": "string",
								"maxLength": 256
							}
						},
						"additionalProperties": false,
						"examples": [
							{
								"entityType": "program",
								"programType": "season",
								"entityId": "breaking-bad-season-1",
								"seriesId": "breaking-bad"
							}
						]
					},
					"TVSeriesEntity": {
						"title": "TVSeriesEntity",
						"description": "A Firebolt compliant representation of a TV Series entity.",
						"type": "object",
						"required": [
							"entityType",
							"programType",
							"entityId"
						],
						"properties": {
							"entityType": {
								"const": "program"
							},
							"programType": {
								"const": "series"
							},
							"entityId": {
								"type": "string"
							},
							"assetId": {
								"type": "string"
							},
							"appContentData": {
								"type": "string",
								"maxLength": 256
							}
						},
						"additionalProperties": false,
						"examples": [
							{
								"entityType": "program",
								"programType": "series",
								"entityId": "breaking-bad"
							}
						]
					},
					"PlaylistEntity": {
						"title": "PlaylistEntity",
						"description": "A Firebolt compliant representation of a Playlist entity.",
						"type": "object",
						"required": [
							"entityType",
							"entityId"
						],
						"properties": {
							"entityType": {
								"const": "playlist"
							},
							"entityId": {
								"type": "string"
							},
							"assetId": {
								"type": "string"
							},
							"appContentData": {
								"type": "string",
								"maxLength": 256
							}
						},
						"additionalProperties": false,
						"examples": [
							{
								"entityType": "playlist",
								"entityId": "playlist/xyz"
							}
						]
					},
					"PlayableEntity": {
						"title": "PlayableEntity",
						"anyOf": [
							{
								"$ref": "https://meta.rdkcentral.com/firebolt/schemas/entity#/definitions/MovieEntity"
							},
							{
								"$ref": "https://meta.rdkcentral.com/firebolt/schemas/entity#/definitions/TVEpisodeEntity"
							},
							{
								"$ref": "https://meta.rdkcentral.com/firebolt/schemas/entity#/definitions/PlaylistEntity"
							},
							{
								"$ref": "https://meta.rdkcentral.com/firebolt/schemas/entity#/definitions/MusicEntity"
							},
							{
								"$ref": "https://meta.rdkcentral.com/firebolt/schemas/entity#/definitions/AdditionalEntity"
							}
						]
					},
					"AdditionalEntity": {
						"title": "AdditionalEntity",
						"description": "A Firebolt compliant representation of the remaining program entity types.",
						"type": "object",
						"required": [
							"entityType",
							"programType",
							"entityId"
						],
						"properties": {
							"entityType": {
								"const": "program"
							},
							"programType": {
								"type": "string",
								"enum": [
									"concert",
									"sportingEvent",
									"preview",
									"other",
									"advertisement",
									"musicVideo",
									"minisode",
									"extra"
								]
							},
							"entityId": {
								"type": "string"
							},
							"assetId": {
								"type": "string"
							},
							"appContentData": {
								"type": "string",
								"maxLength": 256
							}
						},
						"additionalProperties": false,
						"examples": [
							{
								"entityType": "program",
								"programType": "concert",
								"entityId": "live-aid"
							}
						]
					},
					"UntypedEntity": {
						"title": "UntypedEntity",
						"allOf": [
							{
								"description": "A Firebolt compliant representation of the remaining entity types.",
								"type": "object",
								"required": [
									"entityId"
								],
								"properties": {
									"entityId": {
										"type": "string"
									},
									"assetId": {
										"type": "string"
									},
									"appContentData": {
										"type": "string",
										"maxLength": 256
									}
								},
								"additionalProperties": false
							}
						],
						"examples": [
							{
								"entityId": "an-entity"
							}
						]
					},
					"Metadata": {
						"title": "Metadata",
						"type": "object",
						"properties": {
							"title": {
								"type": "string",
								"description": "Title of the entity."
							},
							"synopsis": {
								"type": "string",
								"description": "Short description of the entity."
							},
							"seasonNumber": {
								"type": "number",
								"description": "For TV seasons, the season number. For TV episodes, the season that the episode belongs to."
							},
							"seasonCount": {
								"type": "number",
								"description": "For TV series, seasons, and episodes, the total number of seasons."
							},
							"episodeNumber": {
								"type": "number",
								"description": "For TV episodes, the episode number."
							},
							"episodeCount": {
								"type": "number",
								"description": "For TV seasons and episodes, the total number of episodes in the current season."
							},
							"releaseDate": {
								"type": "string",
								"format": "date-time",
								"description": "The date that the program or entity was released or first aired."
							},
							"contentRatings": {
								"type": "array",
								"items": {
									"$ref": "https://meta.rdkcentral.com/firebolt/schemas/entertainment#/definitions/ContentRating"
								},
								"description": "A list of ContentRating objects, describing the entity's ratings in various rating schemes."
							}
						}
					}
				}
			},
			"https://meta.rdkcentral.com/firebolt/schemas/localization": {
				"title": "Localization",
				"$id": "https://meta.rdkcentral.com/firebolt/schemas/localization",
				"oneOf": [
					{
						"$ref": "https://meta.rdkcentral.com/firebolt/schemas/localization#/definitions/Locality"
					},
					{
						"$ref": "https://meta.rdkcentral.com/firebolt/schemas/localization#/definitions/CountryCode"
					},
					{
						"$ref": "https://meta.rdkcentral.com/firebolt/schemas/localization#/definitions/Language"
					},
					{
						"$ref": "https://meta.rdkcentral.com/firebolt/schemas/localization#/definitions/Locale"
					}
				],
				"definitions": {
					"CountryCode": {
						"type": "string",
						"pattern": "^[A-Z]{2}$"
					},
					"Language": {
						"type": "string",
						"pattern": "^[A-Za-z]{2}$"
					},
					"ISO639_2Language": {
						"type": "string",
						"pattern": "^[a-z]{3}$"
					},
					"Locality": {
						"type": "string"
					},
					"Locale": {
						"type": "string",
						"pattern": "^[a-zA-Z]+([a-zA-Z0-9\\-]*)$"
					}
				}
			},
			"https://meta.rdkcentral.com/firebolt/schemas/secondscreen": {
				"title": "SecondScreen",
				"$id": "https://meta.rdkcentral.com/firebolt/schemas/secondscreen",
				"anyOf": [
					{
						"$ref": "https://meta.rdkcentral.com/firebolt/schemas/secondscreen#/definitions/SecondScreenEvent"
					}
				],
				"definitions": {
					"SecondScreenEvent": {
						"title": "SecondScreenEvent",
						"description": "An a message notification from a second screen device",
						"type": "object",
						"required": [
							"type"
						],
						"properties": {
							"type": {
								"type": "string",
								"enum": [
									"dial"
								]
							},
							"version": {
								"type": "string"
							},
							"data": {
								"type": "string"
							}
						}
					}
				}
			},
			"https://meta.rdkcentral.com/firebolt/schemas/advertising": {
				"title": "Advertising",
				"$id": "https://meta.rdkcentral.com/firebolt/schemas/advertising",
				"oneOf": [
					{
						"$ref": "https://meta.rdkcentral.com/firebolt/schemas/advertising#/definitions/SkipRestriction"
					}
				],
				"definitions": {
					"SkipRestriction": {
						"title": "SkipRestriction",
						"$comment": "xrn:advertising:policy:skipRestriction:",
						"type": "string",
						"enum": [
							"none",
							"adsUnwatched",
							"adsAll",
							"all"
						],
						"description": "The advertisement skip restriction.\n\nApplies to fast-forward/rewind (e.g. trick mode), seeking over an entire opportunity (e.g. jump), seeking out of what's currently playing, and \"Skip this ad...\" features. Seeking over multiple ad opportunities only requires playback of the _last_ opportunity, not all opportunities, preceding the seek destination.\n\n| Value        | Description                                                                    |\n|--------------|--------------------------------------------------------------------------------|\n| none         |No fast-forward, jump, or skip restrictions                                    |\n| adsUnwatched | Restrict fast-forward, jump, and skip for unwatched ad opportunities only.     |\n| adsAll       | Restrict fast-forward, jump, and skip for all ad opportunities                 |\n| all          | Restrict fast-forward, jump, and skip for all ad opportunities and all content |\n\nNamespace: `xrn:advertising:policy:skipRestriction:`\n\n"
					}
				}
			},
			"https://meta.rdkcentral.com/firebolt/schemas/entertainment": {
				"title": "Entertainment",
				"$id": "https://meta.rdkcentral.com/firebolt/schemas/entertainment",
				"anyOf": [
					{
						"$ref": "https://meta.rdkcentral.com/firebolt/schemas/entertainment#/definitions/ProgramType"
					},
					{
						"$ref": "https://meta.rdkcentral.com/firebolt/schemas/entertainment#/definitions/OfferingType"
					},
					{
						"$ref": "https://meta.rdkcentral.com/firebolt/schemas/entertainment#/definitions/WayToWatch"
					},
					{
						"$ref": "https://meta.rdkcentral.com/firebolt/schemas/entertainment#/definitions/ContentRating"
					},
					{
						"$ref": "https://meta.rdkcentral.com/firebolt/schemas/entertainment#/definitions/ContentIdentifiers"
					}
				],
				"definitions": {
					"ProgramType": {
						"title": "ProgramType",
						"type": "string",
						"description": "In the case of a program `entityType`, specifies the program type.",
						"enum": [
							"movie",
							"episode",
							"season",
							"series",
							"other",
							"preview",
							"extra",
							"concert",
							"sportingEvent",
							"advertisement",
							"musicVideo",
							"minisode"
						]
					},
					"MusicType": {
						"title": "MusicType",
						"type": "string",
						"description": "In the case of a music `entityType`, specifies the type of music entity.",
						"enum": [
							"song",
							"album"
						]
					},
					"OfferingType": {
						"title": "OfferingType",
						"type": "string",
						"enum": [
							"free",
							"subscribe",
							"buy",
							"rent"
						],
						"description": "The offering type of the WayToWatch."
					},
					"WayToWatch": {
						"title": "WayToWatch",
						"type": "object",
						"required": [
							"identifiers",
							"audioProfile"
						],
						"properties": {
							"identifiers": {
								"$ref": "https://meta.rdkcentral.com/firebolt/schemas/entertainment#/definitions/ContentIdentifiers"
							},
							"expires": {
								"type": "string",
								"format": "date-time",
								"description": "Time when the WayToWatch is no longer available."
							},
							"entitled": {
								"type": "boolean",
								"description": "Specify if the user is entitled to watch the entity."
							},
							"entitledExpires": {
								"type": "string",
								"format": "date-time",
								"description": "Time when the entity is no longer entitled."
							},
							"offeringType": {
								"$ref": "https://meta.rdkcentral.com/firebolt/schemas/entertainment#/definitions/OfferingType"
							},
							"hasAds": {
								"type": "boolean",
								"description": "True if the streamable asset contains ads."
							},
							"price": {
								"type": "number",
								"description": "For \"buy\" and \"rent\" WayToWatch, the price to buy or rent in the user's preferred currency."
							},
							"videoQuality": {
								"type": "array",
								"items": {
									"type": "string",
									"enum": [
										"SD",
										"HD",
										"UHD"
									]
								},
								"description": "List of the video qualities available via the WayToWatch."
							},
							"audioProfile": {
								"type": "array",
								"items": {
									"$ref": "https://meta.rdkcentral.com/firebolt/schemas/types#/definitions/AudioProfile"
								},
								"description": "List of the audio types available via the WayToWatch."
							},
							"audioLanguages": {
								"type": "array",
								"items": {
									"type": "string"
								},
								"description": "List of audio track languages available on the WayToWatch. The first is considered the primary language. Languages are expressed as ISO 639 1/2 codes."
							},
							"closedCaptions": {
								"type": "array",
								"items": {
									"type": "string"
								},
								"description": "List of languages for which closed captions are available on the WayToWatch. Languages are expressed as ISO 639 1/2 codes."
							},
							"subtitles": {
								"type": "array",
								"items": {
									"type": "string"
								},
								"description": "List of languages for which subtitles are available on the WayToWatch. Languages are expressed as ISO 639 1/2 codes."
							},
							"audioDescriptions": {
								"type": "array",
								"items": {
									"type": "string"
								},
								"description": "List of languages for which audio descriptions (DVD) as available on the WayToWatch. Languages are expressed as ISO 639 1/2 codes."
							}
						},
						"description": "A WayToWatch describes a way to watch a video program. It may describe a single\nstreamable asset or a set of streamable assets. For example, an app provider may\ndescribe HD, SD, and UHD assets as individual WayToWatch objects or rolled into\na single WayToWatch.\n\nIf the WayToWatch represents a single streamable asset, the provided\nContentIdentifiers must be sufficient to play back the specific asset when sent\nvia a playback intent or deep link. If the WayToWatch represents multiple\nstreamable assets, the provided ContentIdentifiers must be sufficient to\nplayback one of the assets represented with no user action. In this scenario,\nthe app SHOULD choose the best asset for the user based on their device and\nsettings. The ContentIdentifiers MUST also be sufficient for navigating the user\nto the appropriate entity or detail screen via an entity intent.\n\nThe app should set the `entitled` property to indicate if the user can watch, or\nnot watch, the asset without making a purchase. If the entitlement is known to\nexpire at a certain time (e.g., a rental), the app should also provide the\n`entitledExpires` property. If the entitlement is not expired, the UI will use\nthe `entitled` property to display watchable assets to the user, adjust how\nassets are presented to the user, and how intents into the app are generated.\nFor example, the the Aggregated Experience could render a \"Watch\" button for an\nentitled asset versus a \"Subscribe\" button for an non-entitled asset.\n\nThe app should set the `offeringType` to define how the content may be\nauthorized. The UI will use this to adjust how content is presented to the user.\n\nA single WayToWatch cannot represent streamable assets available via multiple\npurchase paths. If, for example, an asset has both Buy, Rent and Subscription\navailability, the three different entitlement paths MUST be represented as\nmultiple WayToWatch objects.\n\n`price` should be populated for WayToWatch objects with `buy` or `rent`\n`offeringType`. If the WayToWatch represents a set of assets with various price\npoints, the `price` provided must be the lowest available price."
					},
					"ContentRating": {
						"title": "ContentRating",
						"type": "object",
						"required": [
							"scheme",
							"rating"
						],
						"properties": {
							"scheme": {
								"type": "string",
								"enum": [
									"CA-Movie",
									"CA-TV",
									"CA-Movie-Fr",
									"CA-TV-Fr",
									"US-Movie",
									"US-TV"
								],
								"description": "The rating scheme."
							},
							"rating": {
								"type": "string",
								"description": "The content rating."
							},
							"advisories": {
								"type": "array",
								"items": {
									"type": "string"
								},
								"description": "Optional list of subratings or content advisories."
							}
						},
						"description": "A ContentRating represents an age or content based of an entity. Supported rating schemes and associated types are below.\n\n## United States\n\n`US-Movie` (MPAA):\n\nRatings: `NR`, `G`, `PG`, `PG13`, `R`, `NC17`\n\nAdvisories: `AT`, `BN`, `SL`, `SS`, `N`, `V`\n\n`US-TV` (Vchip):\n\nRatings: `TVY`, `TVY7`, `TVG`, `TVPG`, `TV14`, `TVMA`\n\nAdvisories: `FV`, `D`, `L`, `S`, `V`\n\n## Canada\n\n`CA-Movie` (OFRB):\n\nRatings: `G`, `PG`, `14A`, `18A`, `R`, `E`\n\n`CA-TV` (AGVOT)\n\nRatings: `E`, `C`, `C8`, `G`, `PG`, `14+`, `18+`\n\nAdvisories: `C`, `C8`, `G`, `PG`, `14+`, `18+`\n\n`CA-Movie-Fr` (Canadian French language movies):\n\nRatings: `G`, `8+`, `13+`, `16+`, `18+`\n\n`CA-TV-Fr` (Canadian French language TV):\n\nRatings: `G`, `8+`, `13+`, `16+`, `18+`\n"
					},
					"ContentIdentifiers": {
						"title": "ContentIdentifiers",
						"type": "object",
						"properties": {
							"assetId": {
								"type": "string",
								"description": "Identifies a particular playable asset. For example, the HD version of a particular movie separate from the UHD version."
							},
							"entityId": {
								"type": "string",
								"description": "Identifies an entity, such as a Movie, TV Series or TV Episode."
							},
							"seasonId": {
								"type": "string",
								"description": "The TV Season for a TV Episode."
							},
							"seriesId": {
								"type": "string",
								"description": "The TV Series for a TV Episode or TV Season."
							},
							"appContentData": {
								"type": "string",
								"description": "App-specific content identifiers.",
								"maxLength": 1024
							}
						},
						"description": "The ContentIdentifiers object is how the app identifies an entity or asset to\nthe Firebolt platform. These ids are used to look up metadata and deep link into\nthe app.\n\nApps do not need to provide all ids. They only need to provide the minimum\nrequired to target a playable stream or an entity detail screen via a deep link.\nIf an id isn't needed to get to those pages, it doesn't need to be included."
					}
				}
			},
			"https://meta.rdkcentral.com/firebolt/schemas/lifecycle": {
				"title": "Lifecycle",
				"$id": "https://meta.rdkcentral.com/firebolt/schemas/lifecycle",
				"oneOf": [
					{
						"$ref": "https://meta.rdkcentral.com/firebolt/schemas/lifecycle#/definitions/LifecycleState"
					}
				],
				"definitions": {
					"LifecycleState": {
						"title": "LifecycleState",
						"description": "The application lifecycle state",
						"type": "string",
						"enum": [
							"initializing",
							"inactive",
							"foreground",
							"background",
							"unloading",
							"suspended"
						]
					}
				}
			},
			"https://meta.rdkcentral.com/firebolt/schemas/types": {
				"title": "Types",
				"$id": "https://meta.rdkcentral.com/firebolt/schemas/types",
				"definitions": {
					"AudioProfile": {
						"title": "AudioProfile",
						"type": "string",
						"enum": [
							"stereo",
							"dolbyDigital5.1",
							"dolbyDigital7.1",
							"dolbyDigital5.1+",
							"dolbyDigital7.1+",
							"dolbyAtmos"
						]
					}
				}
			}
		}
	}
}